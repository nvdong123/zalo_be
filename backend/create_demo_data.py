#!/usr/bin/env python3
"""
Script t·∫°o d·ªØ li·ªáu demo cho presentation
T·∫°o tenants, hotel brands, rooms, facilities, promotions, customers...
"""

import pymysql
from datetime import datetime, date, timedelta
import json

# Database config cho VPS
DB_CONFIG = {
    'host': 'localhost',
    'user': 'da_admin',
    'password': 'C8tZ5WfPAxAPfBso',
    'database': 'bookingservicesiovn_zalominidb',
    'charset': 'utf8mb4'
}

def create_demo_data():
    """T·∫°o d·ªØ li·ªáu demo ho√†n ch·ªânh"""
    
    try:
        connection = pymysql.connect(**DB_CONFIG)
        cursor = connection.cursor()
        
        print("üè® T·∫†O D·ªÆ LI·ªÜU DEMO CHO PRESENTATION")
        print("=" * 50)
        
        current_time = datetime.now()
        
        # 1. T·∫°o Tenants
        print("üìã T·∫°o Tenants...")
        tenants_data = [
            {
                'name': 'Grand Hotel Chain',
                'domain': 'grandhotel.com',
                'status': 'active'
            },
            {
                'name': 'Beach Resort Group', 
                'domain': 'beachresort.com',
                'status': 'active'
            }
        ]
        
        for i, tenant in enumerate(tenants_data, 1):
            cursor.execute("SELECT id FROM tbl_tenants WHERE domain = %s AND deleted = 0", (tenant['domain'],))
            if not cursor.fetchone():
                cursor.execute("""
                    INSERT INTO tbl_tenants (name, domain, status, created_at, updated_at, created_by)
                    VALUES (%s, %s, %s, %s, %s, 'demo_script')
                """, (tenant['name'], tenant['domain'], tenant['status'], current_time, current_time))
                print(f"   ‚úÖ Tenant {i}: {tenant['name']}")
        
        # 2. T·∫°o Hotel Brands
        print("üè¢ T·∫°o Hotel Brands...")
        hotel_brands = [
            {
                'tenant_id': 1,
                'hotel_name': 'Grand Palace Hotel',
                'slogan': 'Luxury Beyond Expectation',
                'description': 'Kh√°ch s·∫°n 5 sao h√†ng ƒë·∫ßu v·ªõi d·ªãch v·ª• ƒë·∫≥ng c·∫•p qu·ªëc t·∫ø',
                'address': '123 Tr·∫ßn H∆∞ng ƒê·∫°o, Qu·∫≠n 1',
                'city': 'H·ªì Ch√≠ Minh',
                'phone_number': '+84 28 3822 1234',
                'email': 'info@grandpalace.com',
                'primary_color': '#FFD700',
                'secondary_color': '#1A1A1A'
            },
            {
                'tenant_id': 2,
                'hotel_name': 'Sunset Beach Resort',
                'slogan': 'Where Ocean Meets Paradise',
                'description': 'Resort bi·ªÉn tuy·ªát ƒë·∫πp v·ªõi view ho√†ng h√¥n l√£ng m·∫°n',
                'address': '789 Nguy·ªÖn ƒê√¨nh Chi·ªÉu, H√†m Ti·∫øn',
                'city': 'Phan Thi·∫øt',
                'phone_number': '+84 252 3847 999',
                'email': 'booking@sunsetbeach.com', 
                'primary_color': '#FF6B35',
                'secondary_color': '#004E89'
            }
        ]
        
        for brand in hotel_brands:
            cursor.execute("SELECT id FROM tbl_hotel_brands WHERE hotel_name = %s AND tenant_id = %s AND deleted = 0", 
                         (brand['hotel_name'], brand['tenant_id']))
            if not cursor.fetchone():
                cursor.execute("""
                    INSERT INTO tbl_hotel_brands (
                        tenant_id, hotel_name, slogan, description, address, city,
                        phone_number, email, primary_color, secondary_color,
                        created_at, updated_at, created_by
                    ) VALUES (
                        %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, 'demo_script'
                    )
                """, (
                    brand['tenant_id'], brand['hotel_name'], brand['slogan'], brand['description'],
                    brand['address'], brand['city'], brand['phone_number'], brand['email'],
                    brand['primary_color'], brand['secondary_color'], current_time, current_time
                ))
                print(f"   ‚úÖ {brand['hotel_name']}")
        
        # 3. T·∫°o Rooms
        print("üõèÔ∏è  T·∫°o Rooms...")
        rooms_data = [
            # Grand Palace Hotel (tenant 1)
            {
                'tenant_id': 1, 'room_type': 'Deluxe', 'room_name': 'Deluxe City View',
                'description': 'Ph√≤ng deluxe v·ªõi view th√†nh ph·ªë tuy·ªát ƒë·∫πp', 'price': 2500000.00,
                'capacity_adults': 2, 'capacity_children': 1, 'size_m2': 45, 'view_type': 'city'
            },
            {
                'tenant_id': 1, 'room_type': 'Suite', 'room_name': 'Executive Suite',
                'description': 'Suite cao c·∫•p d√†nh cho doanh nh√¢n', 'price': 4500000.00,
                'capacity_adults': 2, 'capacity_children': 2, 'size_m2': 80, 'view_type': 'city'
            },
            {
                'tenant_id': 1, 'room_type': 'Presidential', 'room_name': 'Presidential Suite',
                'description': 'Ph√≤ng t·ªïng th·ªëng ƒë·∫≥ng c·∫•p nh·∫•t', 'price': 8500000.00,
                'capacity_adults': 4, 'capacity_children': 2, 'size_m2': 150, 'view_type': 'panoramic'
            },
            # Sunset Beach Resort (tenant 2)
            {
                'tenant_id': 2, 'room_type': 'Ocean View', 'room_name': 'Ocean Breeze Room',
                'description': 'Ph√≤ng view bi·ªÉn v·ªõi kh√¥ng gian tho√°ng m√°t', 'price': 3200000.00,
                'capacity_adults': 2, 'capacity_children': 1, 'size_m2': 50, 'view_type': 'ocean'
            },
            {
                'tenant_id': 2, 'room_type': 'Beach Villa', 'room_name': 'Sunset Villa',
                'description': 'Villa ri√™ng bi·ªát b√™n b·ªù bi·ªÉn', 'price': 6500000.00,
                'capacity_adults': 4, 'capacity_children': 2, 'size_m2': 120, 'view_type': 'beach', 'has_balcony': True
            },
            {
                'tenant_id': 2, 'room_type': 'Pool Villa', 'room_name': 'Private Pool Villa',
                'description': 'Villa c√≥ h·ªì b∆°i ri√™ng', 'price': 9500000.00,
                'capacity_adults': 6, 'capacity_children': 3, 'size_m2': 200, 'view_type': 'pool', 'has_balcony': True
            }
        ]
        
        for room in rooms_data:
            cursor.execute("SELECT id FROM tbl_rooms WHERE room_name = %s AND tenant_id = %s AND deleted = 0",
                         (room['room_name'], room['tenant_id']))
            if not cursor.fetchone():
                cursor.execute("""
                    INSERT INTO tbl_rooms (
                        tenant_id, room_type, room_name, description, price,
                        capacity_adults, capacity_children, size_m2, view_type, has_balcony,
                        created_at, updated_at, created_by
                    ) VALUES (
                        %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, 'demo_script'
                    )
                """, (
                    room['tenant_id'], room['room_type'], room['room_name'], room['description'],
                    room['price'], room['capacity_adults'], room['capacity_children'],
                    room['size_m2'], room['view_type'], room.get('has_balcony', False),
                    current_time, current_time
                ))
                print(f"   ‚úÖ {room['room_name']} (Tenant {room['tenant_id']})")
        
        # 4. T·∫°o Facilities
        print("üèä T·∫°o Facilities...")
        facilities_data = [
            # Grand Palace Hotel
            {'tenant_id': 1, 'facility_name': 'Royal Spa & Wellness', 'type': 'spa', 'description': 'Spa ƒë·∫≥ng c·∫•p ho√†ng gia'},
            {'tenant_id': 1, 'facility_name': 'Le Grand Restaurant', 'type': 'restaurant', 'description': 'Nh√† h√†ng Fine Dining'},
            {'tenant_id': 1, 'facility_name': 'Sky Fitness Center', 'type': 'gym', 'description': 'Ph√≤ng gym hi·ªán ƒë·∫°i tr√™n t·∫ßng cao'},
            {'tenant_id': 1, 'facility_name': 'Rooftop Pool', 'type': 'pool', 'description': 'H·ªì b∆°i v√¥ c·ª±c tr√™n s√¢n th∆∞·ª£ng'},
            # Sunset Beach Resort
            {'tenant_id': 2, 'facility_name': 'Ocean Spa', 'type': 'spa', 'description': 'Spa view bi·ªÉn th∆∞ gi√£n'},
            {'tenant_id': 2, 'facility_name': 'Beachside Grill', 'type': 'restaurant', 'description': 'Nh√† h√†ng BBQ b√™n b·ªù bi·ªÉn'},
            {'tenant_id': 2, 'facility_name': 'Water Sports Center', 'type': 'activity', 'description': 'Trung t√¢m th·ªÉ thao n∆∞·ªõc'},
            {'tenant_id': 2, 'facility_name': 'Infinity Pool', 'type': 'pool', 'description': 'H·ªì b∆°i v√¥ c·ª±c view bi·ªÉn'},
        ]
        
        for facility in facilities_data:
            cursor.execute("SELECT id FROM tbl_facilities WHERE facility_name = %s AND tenant_id = %s AND deleted = 0",
                         (facility['facility_name'], facility['tenant_id']))
            if not cursor.fetchone():
                cursor.execute("""
                    INSERT INTO tbl_facilities (tenant_id, facility_name, type, description, created_at, updated_at, created_by)
                    VALUES (%s, %s, %s, %s, %s, %s, 'demo_script')
                """, (facility['tenant_id'], facility['facility_name'], facility['type'], 
                     facility['description'], current_time, current_time))
                print(f"   ‚úÖ {facility['facility_name']} (Tenant {facility['tenant_id']})")
        
        # 5. T·∫°o Promotions
        print("üéâ T·∫°o Promotions...")
        promotions_data = [
            {
                'tenant_id': 1, 'promotion_name': 'Black Friday Luxury Deal',
                'description': 'Gi·∫£m 30% cho t·∫•t c·∫£ ph√≤ng Suite trong th√°ng 11',
                'valid_from': datetime(2025, 11, 1), 'valid_to': datetime(2025, 11, 30)
            },
            {
                'tenant_id': 1, 'promotion_name': 'New Year Celebration Package',
                'description': 'G√≥i ƒë·∫∑c bi·ªát ƒë√≥n nƒÉm m·ªõi v·ªõi nhi·ªÅu ∆∞u ƒë√£i',
                'valid_from': datetime(2025, 12, 25), 'valid_to': datetime(2026, 1, 5)
            },
            {
                'tenant_id': 2, 'promotion_name': 'Summer Beach Getaway',
                'description': 'K·ª≥ ngh·ªâ h√® tuy·ªát v·ªùi v·ªõi gi√° ∆∞u ƒë√£i',
                'valid_from': datetime(2025, 6, 1), 'valid_to': datetime(2025, 8, 31)
            },
            {
                'tenant_id': 2, 'promotion_name': 'Romantic Sunset Package',
                'description': 'G√≥i l√£ng m·∫°n cho c√°c c·∫∑p ƒë√¥i',
                'valid_from': datetime(2025, 2, 10), 'valid_to': datetime(2025, 2, 20)
            }
        ]
        
        for promo in promotions_data:
            cursor.execute("SELECT id FROM tbl_promotions WHERE promotion_name = %s AND tenant_id = %s AND deleted = 0",
                         (promo['promotion_name'], promo['tenant_id']))
            if not cursor.fetchone():
                cursor.execute("""
                    INSERT INTO tbl_promotions (tenant_id, promotion_name, description, valid_from, valid_to, is_active, created_at, updated_at, created_by)
                    VALUES (%s, %s, %s, %s, %s, 1, %s, %s, 'demo_script')
                """, (promo['tenant_id'], promo['promotion_name'], promo['description'],
                     promo['valid_from'], promo['valid_to'], current_time, current_time))
                print(f"   ‚úÖ {promo['promotion_name']} (Tenant {promo['tenant_id']})")
        
        # 6. T·∫°o Demo Customers
        print("üë• T·∫°o Demo Customers...")
        customers_data = [
            {'tenant_id': 1, 'name': 'Nguy·ªÖn VƒÉn A', 'phone': '0901234567', 'email': 'nguyenvana@email.com'},
            {'tenant_id': 1, 'name': 'Tr·∫ßn Th·ªã B', 'phone': '0912345678', 'email': 'tranthib@email.com'},
            {'tenant_id': 1, 'name': 'L√™ Ho√†ng C', 'phone': '0923456789', 'email': 'lehoangc@email.com'},
            {'tenant_id': 2, 'name': 'Ph·∫°m Minh D', 'phone': '0934567890', 'email': 'phamminhd@email.com'},
            {'tenant_id': 2, 'name': 'Ho√†ng Th·ªã E', 'phone': '0945678901', 'email': 'hoangthie@email.com'},
            {'tenant_id': 2, 'name': 'V≈© Quang F', 'phone': '0956789012', 'email': 'vuquangf@email.com'},
        ]
        
        for customer in customers_data:
            cursor.execute("SELECT id FROM tbl_customers WHERE phone = %s AND tenant_id = %s AND deleted = 0",
                         (customer['phone'], customer['tenant_id']))
            if not cursor.fetchone():
                cursor.execute("""
                    INSERT INTO tbl_customers (tenant_id, name, phone, email, created_at, updated_at, created_by)
                    VALUES (%s, %s, %s, %s, %s, %s, 'demo_script')
                """, (customer['tenant_id'], customer['name'], customer['phone'],
                     customer['email'], current_time, current_time))
                print(f"   ‚úÖ {customer['name']} (Tenant {customer['tenant_id']})")
        
        connection.commit()
        
        print("\nüéØ T·∫†O D·ªÆ LI·ªÜU DEMO HO√ÄN T·∫§T!")
        print("=" * 50)
        print("‚úÖ Tenants: 2")
        print("‚úÖ Hotel Brands: 2") 
        print("‚úÖ Rooms: 6")
        print("‚úÖ Facilities: 8")
        print("‚úÖ Promotions: 4")
        print("‚úÖ Customers: 6")
        print("‚úÖ Admin Users: 3")
        
        print(f"\nüåê URL: http://157.10.199.22/")
        print("üîë Login v·ªõi:")
        print("   ‚Ä¢ superadmin / admin123 (Super Admin)")
        print("   ‚Ä¢ admin_grand / admin123 (Grand Hotel)")
        print("   ‚Ä¢ admin_beach / admin123 (Beach Resort)")
        
        return True
        
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")
        return False
    finally:
        if 'connection' in locals():
            connection.close()

if __name__ == "__main__":
    create_demo_data()
