"""
Script to insert sample data for test_items table - for Zalo app testing
"""

from sqlalchemy.orm import Session
from app.db.session_local import SessionLocal
from app.models.models import TblTestItems

def create_sample_test_items():
    db = SessionLocal()
    try:
        # Check if test items already exist
        existing_items = db.query(TblTestItems).count()
        if existing_items > 0:
            print(f"‚úÖ Test items already exist: {existing_items} items")
            return
        
        # Sample test items for Zalo app
        sample_items = [
            {
                "name": "Ph√≤ng Deluxe Ocean View",
                "description": "Ph√≤ng cao c·∫•p v·ªõi view bi·ªÉn tuy·ªát ƒë·∫πp, di·ªán t√≠ch 35m¬≤",
                "price": 2500000,
                "image_url": "https://example.com/room1.jpg",
                "status": "active"
            },
            {
                "name": "Ph√≤ng Superior Garden View", 
                "description": "Ph√≤ng ti√™u chu·∫©n view v∆∞·ªùn, di·ªán t√≠ch 28m¬≤",
                "price": 1800000,
                "image_url": "https://example.com/room2.jpg",
                "status": "active"
            },
            {
                "name": "Suite Executive",
                "description": "Ph√≤ng suite sang tr·ªçng v·ªõi ph√≤ng kh√°ch ri√™ng, di·ªán t√≠ch 55m¬≤",
                "price": 4500000,
                "image_url": "https://example.com/suite.jpg", 
                "status": "active"
            },
            {
                "name": "Spa Massage Th∆∞ Gi√£n",
                "description": "D·ªãch v·ª• massage to√†n th√¢n v·ªõi tinh d·∫ßu thi√™n nhi√™n - 90 ph√∫t",
                "price": 800000,
                "image_url": "https://example.com/spa.jpg",
                "status": "active"
            },
            {
                "name": "Buffet S√°ng Qu·ªëc T·∫ø",
                "description": "Buffet s√°ng phong ph√∫ v·ªõi m√≥n √Å - √Çu t·∫°i nh√† h√†ng ch√≠nh",
                "price": 350000,
                "image_url": "https://example.com/breakfast.jpg",
                "status": "active"
            }
        ]
        
        # Insert sample data
        for item_data in sample_items:
            test_item = TblTestItems(**item_data)
            db.add(test_item)
        
        db.commit()
        print(f"‚úÖ Created {len(sample_items)} sample test items for Zalo app")
        
        # Display created items
        print("\nüìã Sample test items:")
        for i, item in enumerate(sample_items, 1):
            print(f"  {i}. {item['name']} - {item['price']:,} VNƒê")
        
    except Exception as e:
        print(f"‚ùå Error creating sample test items: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    print("üöÄ Creating sample test items for Zalo app...")
    create_sample_test_items()
    print("‚úÖ Done!")
